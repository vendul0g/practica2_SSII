vector<regla> inicializa_bc()
{//TODO borrar
    vector<regla> bc(4);

    bc[0].id = 1;
	bc[0].alpha.resize(2);
	bc[0].op = OR;
	bc[0].alpha[0].id = 'a';
	bc[0].alpha[1].id = 'b';
	bc[0].beta.id = 'c';
	bc[0].fc = 0.7;

    bc[1].id = 2;
    bc[1].alpha.resize(3);
    bc[1].op = AND;
    bc[1].alpha[0].id = 'd';
    bc[1].alpha[1].id = 'e';
    bc[1].alpha[2].id = 'f';
    bc[1].beta.id = 'c';
    bc[1].fc = 0.5;

    bc[2].id = 3;
    bc[2].alpha.resize(2);
    bc[2].op = OR;
    bc[2].alpha[0].id = 'c';
    bc[2].alpha[1].id = 'h';
    bc[2].beta.id = 'i';
    bc[2].fc = 0.65;

    bc[3].id = 4;
    bc[3].alpha.resize(1);
    //bc[3].op = NOT; Como el tama√±o de alpha es 1, no hay operador
    bc[3].alpha[0].id = 'g';
    bc[3].beta.id = 'h';
    bc[3].fc = 0.6;

    return bc;
}

vector<hecho> inicializa_bh()
{//TODO borrar
    vector<hecho> bh(6);
    
	bh[0].id = 'a';
	bh[0].fc = 0.6;

	bh[1].id = 'b';
	bh[1].fc = 0.4;

	bh[2].id = 'd';
	bh[2].fc = 0.9;

	bh[3].id = 'e';
	bh[3].fc = 0.7;

	bh[4].id = 'f';
	bh[4].fc = 0.8;

	bh[5].id = 'g';
	bh[5].fc = -0.3;

    return bh;
}